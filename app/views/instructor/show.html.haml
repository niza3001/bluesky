
%table.table.table-condensed
  %thead
    %tr
      %th.text-left
        = link_to "Back to faculty member list", instructor_index_path, class: "btn btn-primary"
      %th.text-right
        = link_to "Download", export_instructor_path, class: "btn btn-primary"

%table.table.table-condensed
  %thead
    %tr
      %th.text-left
        %h1
          = @instructor.name
      %th.text-right
        = form_for @instructor, method: :put, html: { } do |f|
          .form-group
            .col-sm-3
              = f.select :status, options_for_select(["Current" , "Courtesy" , "Inactive"], @instructor.status), {}, class: "form-control"
            .col-sm-2
              = f.submit "Update", class: "btn btn-primary"

%table.table.table-bordered.table-condensed
  %thead.light-gray-highlight
    %tr
      %th Undergraduate and Graduate Courses Taught
      %th Semester
      %th No. of Students Enrolled
      %th Mean Student Evaluation Score
      %th Dept Avg Student Evaluation Score for Equivalent Level Courses
      %th Avg. Numerical Grade Earned by Students
      %th Avg. Course Level Numerical Grade
  %tbody
    - @instructor_course_groups.each do |course_section_group|
      %tr
        %td
          = course_name_for(course_section_group.first)
          - if can? :write, :all
            = course_section_group.first.course_name
            (
            = link_to((course_section_group.first.has_course_name? ? "Edit" : "Add Course Name"), new_course_name_path(subject_course: course_section_group.first.subject_course, return_to: instructor_path(@instructor)))
            )
        %td= course_section_group.first.term
        %td= compute_total_enrollment(course_section_group)
        %td{ class: (course_section_group.nil? ? "highlighted" : "" ) }
          =compute_mean_student_eval_score(course_section_group).round(2)
        %td= compute_course_level_average(course_section_group, @all_course_groups).round(2)
        %td{ class: (compute_mean_gpr(course_section_group).nil? ? "highlighted" : "" ) }
          = compute_mean_gpr(course_section_group).try(:round, 2)
        %td{ class: (compute_course_level_mean_gpr(course_section_group, @all_course_groups).nil? ? "highlighted" : "" ) }
          = compute_course_level_mean_gpr(course_section_group, @all_course_groups).try(:round, 2)

  %tfoot
  / blank table row
  %tr
    %td{colspan: 4}

  %tr.gray-highlight
    %td{colspan: 2} TOTAL NUMBER OF STUDENTS
    %td{colspan: 2}= @instructor.course_section_groups.map { |course_section_group| compute_total_enrollment(course_section_group) }.reduce(:+)
